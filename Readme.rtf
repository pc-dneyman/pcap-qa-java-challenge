{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red254\green244\blue139;}
\margl1440\margr1440\vieww23780\viewh11520\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf0 \cb2 \CocoaLigature0 The project you are presented with designed to demonstrate various white box testing techniques and approaches that are considered important by Personal Capital server team. \
\
The project is a pure Maven based Java module making use of such frameworks as Spring and Hibernate, as well as in-memory HSQLDB that greatly simplifies testing.\
\
You will find number of Java packages and a few classes - each with their own theme. Among them:\
\
1) Utility class for string / number manipulations and formatting (Utils)\
\
2) Sample Dao class exposing basic CRUD operations and corresponding mapped entity (Loan and LoanDao)\
\
3) Sample RESTfull service - QuoteService that calls into Xignite provider and brings back XML and JSON marshalled responses (QouteRestService, QuoteJson, QuoteXml)\
\
Each class above has a corresponding JUnit Test class placeholder. \
\
Upon initially compilation or test ($mvn compile [test]), you will see number of failures. \
\
Failed tests: \
  LoanDaoTest.testGetAllLoans:50 Not yet implemented\
  LoanDaoTest.testUpdateLoan:44 Not yet implemented\
  LoanDaoTest.testCreateLoan:38 Not yet implemented\
  LoanDaoTest.testXXXXXX:56 Not yet implemented\
  \'97\
  QuoteRestServiceTest.testXml:36 Not yet implemented\
  QuoteRestServiceTest.testJson:31 Not yet implemented\
  QuoteRestServiceTest.testXXXXXX:41 Not yet implemented\
  \'97\
  UtilsTest.testXXXXXX:19 Not yet implemented\
\
\
Your goal is to implement failed test methods and add any new tests that demonstrate your approach to problems of this sort.\
\
Each test class has a class level comment with some rationale and suggestions about testing this particular class. \
\
This could be helpful and may point you to the right direction when approaching this challenge.\
\
Feel free to improvise and be creative. Use IDE of your choice and if getting stuck with syntax, prototype your solutions to show main ideas.\
\
Good luck.\
\
\
\
\
}